name: Build, push, and scan images
on:
  workflow_call:
    inputs:
      CONTAINER_REGISTRY_REPO:
        description: "name of your repo or project name in your container registry"
        required: true
        type: string
    secrets:
      CONTAINER_REGISTRY_USERNAME:
        description: "your container registry username"
        required: true
      CONTAINER_REGISTRY_PASSWORD:
        description: "your container registry password"
        required: true
env:
  IMAGE: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}/${{ inputs.CONTAINER_REGISTRY_REPO }}
jobs:
  build-push-image:
    name: Build and push an image
    runs-on: [self-hosted, notes-api-demo]
    outputs:
      build_id: ${{ steps.prep.outputs.BUILD_ID }}
      latest_id: ${{ steps.prep.outputs.LATEST_ID }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      - name: Prepare Image Metadata
        id: prep
        run: |
          BRANCH=${GITHUB_REF##*/}
          TS=$(date +%s)
          BUILD_ID="${BRANCH}-${TS}"
          LATEST_ID=latest
          echo "BUILD_ID=${BUILD_ID}" >> $GITHUB_OUTPUT
          echo "LATEST_ID=${LATEST_ID}" >> $GITHUB_OUTPUT
      - name: Push Image to Container Registry
        if: success()
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ steps.prep.outputs.BUILD_ID }}
            ${{ env.IMAGE }}:${{ steps.prep.outputs.LATEST_ID }}
      - name: Remove image from runner
        if: success()
        run: |
          docker rmi ${{ env.IMAGE }}:${{ steps.prep.outputs.BUILD_ID }}
          docker rmi ${{ env.IMAGE }}:${{ steps.prep.outputs.LATEST_ID }}
          docker system prune --force

  scan-image:
    name: Scan an image vulnerabilities
    runs-on: [self-hosted, notes-api-demo]
    needs: build-push-image
    steps:
      - name: Docker Scout
        uses: docker/scout-action@v1.2.2
        with:
          command: cves
          image: ${{ env.IMAGE }}:${{ needs.build-image.outputs.latest_id }}
          only-severities: critical,high
          exit-code: false
